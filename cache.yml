!!com.aptana.scripting.model.BundleElement
author: null
children:
- !command
  async: false
  customProperties: null
  displayName: Documentation for Selection (jQuery)
  input: [selection, word]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': [M4+H]
  outputPath: null
  outputType: show_as_html
  path: commands/documentation_for_word.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [$]
  displayName: $ (Select DOM Element)
  expansion: \$(${1:'string'/element/array/function/jQuery object/'string', context})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [this]
  displayName: $(this)
  expansion: \$(this)$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [$.ajax]
  displayName: $.ajax
  expansion: "\\$.ajax({\n  url: '${1:/path/to/file}',\n${2/(.+)/(?1:  type\\: ':)/}${2:POST}${2/(.+)/(?1:',\n\
    :)/}${3/(.+)/(?1:  dataType\\: ':)/}${3:xml/html/script/json/jsonp}${3/(.+)/(?1:',\n\
    :)/}${4/(.+)/(?1:  data\\: {:)/}${4:param1: 'value1'}${4/(.+)/(?1:},\n:)/}${5/(.+)/(?1:\
    \  complete\\: function\\(xhr, textStatus\\) {\n    :)/}${5://called when complete}${5/(.+)/(?1:\n\
    \  },\n:)/}${6/(.+)/(?1:  success\\: function\\(data, textStatus, xhr\\) {\n \
    \   :)/}${6://called when successful}${6/(.+)/(?1:\n  },\n:)/}${7/(.+)/(?1:  error\\\
    : function\\(xhr, textStatus, errorThrown\\) {\n    :)/}${7://called when there\
    \ is an error}\n${7/(.+)/(?1:  }\n:)/}});\n$0"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.ajaxError]
  displayName: ajaxError
  expansion: ".ajaxError(function(${1:event, xhr, settings, thrownError}) {\n  ${2://stuff\
    \ to do when an AJAX call returns an error};\n});\n$0"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.ajaxSend]
  displayName: ajaxSend
  expansion: ".ajaxSend(function(${1:event, xhr, settings}) {\n  ${2://stuff to do\
    \ before an AJAX request is sent};\n});\n$0"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [$.ajaxSetup]
  displayName: $.ajaxSetup
  expansion: "\\$.ajaxSetup({\n  url: '${1:/path/to/file}',\n${2/(.+)/(?1:  type\\\
    : ':)/}${2:POST}${2/(.+)/(?1:',\n:)/}${3/(.+)/(?1:  dataType\\: ':)/}${3:xml/html/script/json/jsonp}${3/(.+)/(?1:',\n\
    :)/}${4/(.+)/(?1:  data\\: {:)/}${4:param1: 'value1'}${4/(.+)/(?1:},\n:)/}${5/(.+)/(?1:\
    \  complete\\: function\\(xhr, textStatus\\) {\n    :)/}${5://called when complete}${5/(.+)/(?1:\n\
    \  },\n:)/}${6/(.+)/(?1:  success\\: function\\(data, textStatus, xhr\\) {\n \
    \   :)/}${6://called when successful}${6/(.+)/(?1:\n  },\n:)/}${7/(.+)/(?1:  error\\\
    : function\\(xhr, textStatus, errorThrown\\) {\n    :)/}${7://called when there\
    \ is an error}\n${7/(.+)/(?1:  }\n:)/}});\n$0"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.ajaxStart]
  displayName: ajaxStart
  expansion: ".ajaxStart(function() {\n  ${1://stuff to do when an AJAX call is started\
    \ and no other AJAX calls are in progress};\n});\n$0"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.ajaxStop]
  displayName: ajaxStop
  expansion: ".ajaxStop(function() {\n  ${1://stuff to do when all AJAX calls have\
    \ completed};\n});\n$0"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.ajaxSuccess]
  displayName: ajaxSuccess
  expansion: ".ajaxSuccess(function(event, xhr, settings) {\n\t${1:// executes whenever\
    \ an AJAX request completes successfully}\n});$0"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [$.boxModel]
  displayName: $.boxModel
  expansion: \$.boxModel
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [$.browser]
  displayName: $.browser
  expansion: '\$.browser${1/(.+)/(?1:.:)/}${1:webkit/opera/msie/mozilla}${1/(.+)/(?1:
    :)/}$0'
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [$.browser]
  displayName: $.browser.version
  expansion: \$.browser.version
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [$.each]
  displayName: $.each
  expansion: "\\$.each(${1:array/object}, function(${2:index}${3:, ${4:val}}) {\n\
    \  ${0://iterate through array or object}\n});"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [$.extend]
  displayName: $.extend
  expansion: '\$.extend(${1:true, }${2:target object}, ${3:object1});

    $0'
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [$.get]
  displayName: $.get
  expansion: "\\$.get('${1:/path/to/file}'${2/(.+)/(?1:, {:)/}${2:param1: 'value1'}${2/(.+)/(?1:}:)/}${3/(.+)/(?1:,\
    \ function\\(data, textStatus, xhr\\) {\n  :)/}${3://optional stuff to do after\
    \ success}${3/(.+)/(?1:\n}:)/});\n$0"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [$.getJSON]
  displayName: $.getJSON
  expansion: "\\$.getJSON('${1:/path/to/file}'${2/(.+)/(?1:, {:)/}${2:param1: 'value1'}${2/(.+)/(?1:}:)/}${3/(.+)/(?1:,\
    \ function\\(json, textStatus\\) {\n  :)/}${3://optional stuff to do after success}${3/(.+)/(?1:\n\
    }:)/});\n$0"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [$.getScript]
  displayName: $.getScript
  expansion: "\\$.getScript('${1:path/to/file}'${2/(.+)/(?1:, function\\(data, textStatus\\\
    ) {\n  :)/}${2://optional stuff to do after getScript}${2/(.+)/(?1:\n}:)/});\n\
    $0"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [$.inArray]
  displayName: $.inArray
  expansion: \$.inArray(${1:value}, ${2:array});$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [$.isEmptyObject]
  displayName: $.isEmptyObject
  expansion: \$.isEmptyObject('${1:object}')$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [$.isPlainObject]
  displayName: $.isPlainObject
  expansion: \$.isPlainObject('${1:object}')$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [$.map]
  displayName: $.map
  expansion: "\\$.map(${1:array}, function(${2:item}${3:, ${4:index}}) {\n  ${5:return\
    \ ${6:something};}\n});"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [$.merge]
  displayName: $.merge
  expansion: '\$.merge(${1:array1}, ${2:array2});

    $0'
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [$.noop]
  displayName: $.noop
  expansion: \$.noop()${0:;}${1:}
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [$.parseJSON]
  displayName: $.parseJSON
  expansion: \$.parseJSON(${1:json});${0:}
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [$.post]
  displayName: $.post
  expansion: "\\$.post('${1:/path/to/file}'${2/(.+)/(?1:, {:)/}${2:param1: 'value1'}${2/(.+)/(?1:}:)/}${3/(.+)/(?1:,\
    \ function\\(data, textStatus, xhr\\) {\n  :)/}${3://optional stuff to do after\
    \ success}${3/(.+)/(?1:\n}:)/});\n$0"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [$.trim]
  displayName: $.trim
  expansion: \$.trim(${1:'${2:string}'})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [$.unique]
  displayName: $.unique
  expansion: '\$.unique(${1:DOMelementArray});

    $0'
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.add]
  displayName: add
  expansion: .add('${1:selector/elements/html}')$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.addClass]
  displayName: addClass
  expansion: .addClass('${1:class name}')$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.after]
  displayName: after
  expansion: .after('${1:Some text <b>and bold!</b>}')$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.ajaxComplete]
  displayName: ajaxComplete
  expansion: ".ajaxComplete(function(event, xhr, settings) {\n\t${1:// executes whenever\
    \ an AJAX request completes}\n});$0"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.andSelf]
  displayName: andSelf
  expansion: .andSelf()$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.animate]
  displayName: animate (with callback)
  expansion: ".animate({${2:param1}: ${3:value1}${4:, ${5:param2}: ${6:value2}}},\
    \ ${7:speed}, function() {\n  ${0:// stuff to do after animation is complete}\n\
    })"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.animate]
  displayName: animate
  expansion: '.animate({${1:${2:param1}: ${3:value1}${4:, ${5:param2}: ${6:value2}}}},
    ${7:speed})$0'
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.append]
  displayName: append
  expansion: .append('${1:Some text <b>and bold!</b>}')$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.appendTo]
  displayName: appendTo
  expansion: .appendTo('${1:selector expression}')$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.attr]
  displayName: attr (map)
  expansion: ".attr({\n  ${1/^([^'\"].+-.+)$|.+/(?1:':)/}${1:attribute1}${1/^([^'\"\
    ].+-.+[^'\"])$|.+/(?1:':)/}: ${3:'${2:value1}'}${4/([^,]).*|.+/(?1:,\n  :)/m}${4:attribute2:\
    \ 'value2'}\n})$0"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.attr]
  displayName: attr
  expansion: .attr('${1:attribute}'${2/(^,).*|.+/(?1::, )/}${2/(^([0-9]+$|,.*))|.+/(?1::')/}${2:value}${2/(^([0-9]+$|,.*))|.+/(?1::')/})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.before]
  displayName: before
  expansion: .before('${1:Some text <b>and bold!</b>}')$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.bind]
  displayName: bind
  expansion: ".bind('${1:event name}', function(${2:event}) {\n  ${0:// Act on the\
    \ event}\n});"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.blur]
  displayName: blur
  expansion: ".blur(${1:function() {\n\t${0:// Act on the event}\n\\}});"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.change]
  displayName: change
  expansion: ".change(${1:function() {\n\t${0:// Act on the event}\n\\}});"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.children]
  displayName: children
  expansion: .children(${1/(.+)/(?1:':)/}${1:selector expression}${1/(.+)/(?1:':)/})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.clearQueue]
  displayName: clearqueue
  expansion: .clearQueue(${1/(.+)/(?1:':)/}${1:queueName}${1/(.+)/(?1:':)/})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.click]
  displayName: click
  expansion: ".click(${1:function() {\n\t${0:// Act on the event}\n\\}});"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [clone]
  displayName: clone
  expansion: .clone()$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.filter]
  displayName: filter
  expansion: .filter('${1:selector expression}')$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.contains]
  displayName: contains
  expansion: .contains('${1:text to find}')$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.contents]
  displayName: contents
  expansion: .contents()$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.css]
  displayName: css (map)
  expansion: ".css({\n  ${1/^([^'\"].+-.+)$|.+/(?1:':)/}${1:property1}${1/^([^'\"\
    ].+-.+[^'\"])$|.+/(?1:':)/}: ${3:'${2:value1}'}${4/^([^,]).*|.+/(?1:,\n  :)/m}${4:property2:\
    \ 'value2'}\n})$0"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.css]
  displayName: css
  expansion: .css('${1:property}'${2/(^,).*|.+/(?1::, )/}${2/(^([0-9]+$|,.*))|.+/(?1::')/}${2:value}${2/(^([0-9]+$|,.*))|.+/(?1::')/})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.data]
  displayName: data
  expansion: .data('${1:data}'${2/(.+)/(?1:, :)/}${2/(^[0-9]+$)|.+/(?1::')/}${2:value}${2/(^[0-9]+$)|.+/(?1::')/})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.dblclick]
  displayName: dblclick
  expansion: ".dblclick(${1:function() {\n\t${0:// Act on the event}\n\\}});"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.delay]
  displayName: delay
  expansion: .delay(${1:milliseconds}${2/^([^,]|\w).*$|.+/(?1:, :)/}${2:queueName})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.delegate]
  displayName: delegate
  expansion: ".delegate('${1:selector}', '${2:event type(s)}'${3/(^{).*|.+/(?1::,\
    \ {)/}${3:value}${3/(^(}.+$|,.*))|.+/(?1::})/}, function(${4:event}) {\n\t${0://\
    \ Act on the event}\n});"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.dequeue]
  displayName: dequeue
  expansion: .dequeue(${1/(.+)/(?1:':)/}${1:queueName}${1/(.+)/(?1:':)/})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.die]
  displayName: die
  expansion: .die('${1:click/dblclick/mousedown/mouseup/mousemove/mouseover/mouseout/keydown/keypress/keyup}')$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [ready]
  displayName: document ready (safe)
  expansion: "jQuery(document).ready(function(\\$) {\n\t${0:// Stuff to do as soon\
    \ as the DOM is ready. Use \\$() w/o colliding with other libs;}\n});\n"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [ready]
  displayName: document ready
  expansion: "\\$(document).ready(function() {\n\t${0:// Stuff to do as soon as the\
    \ DOM is ready;}\n});\n"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.each]
  displayName: each
  expansion: ".each(function(index) {\n  ${0:this.innerHTML = this + \" is the element,\
    \ \" + index + \" is the position\";}\n});"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.end]
  displayName: end
  expansion: .end()$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.eq]
  displayName: eq
  expansion: .eq(${1:index})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.error]
  displayName: error
  expansion: ".error(${1:function() {\n\t${0:// Act on the event}\n\\}});"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.fadeIn]
  displayName: fadeIn (with callback)
  expansion: ".fadeIn(${1/(^[0-9]+$)|.+/(?1::')/}${1:slow/400/fast}${1/(^[0-9]+$)|.+/(?1::')/},\
    \ function() {\n\t${0://Stuff to do *after* the animation takes place};\n});\n"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.fadeIn]
  displayName: fadeIn
  expansion: .fadeIn(${1/(^[0-9]+$)|.+/(?1::')/}${1:slow/400/fast}${1/(^[0-9]+$)|.+/(?1::')/})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.fadeOut]
  displayName: fadeOut (with callback)
  expansion: ".fadeOut(${1/(^[0-9]+$)|.+/(?1::')/}${1:slow/400/fast}${1/(^[0-9]+$)|.+/(?1::')/},\
    \ function() {\n\t${0://Stuff to do *after* the animation takes place};\n});\n"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.fadeOut]
  displayName: fadeOut
  expansion: .fadeOut(${1/(^[0-9]+$)|.+/(?1::')/}${1:slow/400/fast}${1/(^[0-9]+$)|.+/(?1::')/})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.fadeTo]
  displayName: fadeTo (with callback)
  expansion: ".fadeTo(${1/(^[0-9]+$)|.+/(?1::')/}${1:slow/400/fast}${1/(^[0-9]+$)|.+/(?1::')/},\
    \ ${2:0.5}, function() {\n\t${0://Stuff to do *after* the animation takes place};\n\
    });\n"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.fadeTo]
  displayName: fadeTo
  expansion: .fadeTo(${1/(^[0-9]+$)|.+/(?1::')/}${1:slow/400/fast}${1/(^[0-9]+$)|.+/(?1::')/}, ${2:0.5})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.filter]
  displayName: filter (function)
  expansion: ".filter(function(index) {\n  ${1:return ${2:something};}\n})"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.closest]
  displayName: closest
  expansion: .closest('${1:selector expression}')$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.find]
  displayName: find
  expansion: .find('${1:selector expression}')$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.first]
  displayName: first
  expansion: .first()$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.focus]
  displayName: focus
  expansion: ".focus(${1:function() {\n\t${0:// Act on the event}\n\\}});"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.focusin]
  displayName: focusin
  expansion: ".focusin(${1:function() {\n\t${0:// Act on the event}\n\\}});"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.focusout]
  displayName: focusout
  expansion: ".focusout(${1:function() {\n\t${0:// Act on the event}\n\\}});"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.get]
  displayName: get
  expansion: .get(${1:element index})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.has]
  displayName: has
  expansion: .has(${1/(.+)/(?1:':)/}${1:contained selector/element}${1/(.+)/(?1:':)/})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.hasClass]
  displayName: hasClass
  expansion: .hasClass('${1:className}')$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.height]
  displayName: height
  expansion: .height(${1:integer})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.hide]
  displayName: hide (with callback)
  expansion: ".hide(${1/(^[0-9]+$)|.+/(?1::')/}${1:slow/400/fast}${1/(^[0-9]+$)|.+/(?1::')/},\
    \ function() {\n\t${0://Stuff to do *after* the animation takes place};\n});\n"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.hide]
  displayName: hide
  expansion: .hide(${1/(^[0-9]+$)|.+/(?1::')/}${1:slow/400/fast}${1/(^[0-9]+$)|.+/(?1::')/})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.hover]
  displayName: hover
  expansion: ".hover(function() {\n\t${1:// Stuff to do when the mouse enters the\
    \ element;}\n}, function() {\n\t${2:// Stuff to do when the mouse leaves the element;}\n\
    });$0"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.html]
  displayName: html
  expansion: .html(${1/(.+)/(?1:':)/}${1:Some text <b>and bold!</b>}${1/(.+)/(?1:':)/})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.index]
  displayName: index
  expansion: .index(${1/(.+)/(?1:':)/}${1:selector/element}${1/(.+)/(?1:':)/})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.innerHeight]
  displayName: innerHeight
  expansion: .innerHeight()$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.innerWidth]
  displayName: innerWidth
  expansion: .innerWidth()$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.insertAfter]
  displayName: insertAfter
  expansion: .insertAfter('${1:selector expression}')$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.insertBefore]
  displayName: insertBefore
  expansion: .insertBefore('${1:selector expression}')$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.is]
  displayName: is
  expansion: .is('${1:selector expression}')$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.keydown]
  displayName: keydown
  expansion: ".keydown(${1:function() {\n\t${0:// Act on the event}\n\\}});"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.keypress]
  displayName: keypress
  expansion: ".keypress(${1:function() {\n\t${0:// Act on the event}\n\\}});"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.keyup]
  displayName: keyup
  expansion: ".keyup(${1:function() {\n\t${0:// Act on the event}\n\\}});"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.last]
  displayName: last
  expansion: .last()$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.live]
  displayName: live
  expansion: ".live('${1:event type(s)}', function(${2:event}) {\n\t${0:// Act on\
    \ the event}\n});"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.load]
  displayName: load (AHAH)
  expansion: ".load('${1:/path/to/file}'${2/(.+)/(?1:,{\n :)/}${2:param1: \"value1\"\
    , param2: \"value2\"}${2/(.+)/(?1:}:)/}${3/(.+)/(?1:,\n function\\(\\){\n    :)/}${3://\
    \ Stuff to do after the page is loaded}${3/(.+)/(?1:\n}:)/});\n$0"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.load]
  displayName: load
  expansion: ".load(${1:function() {\n\t${0:// Act on the event}\n\\}});"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.map]
  displayName: map (function)
  expansion: ".map(function(index, elem) {\n  ${1:return ${2:something};}\n})"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.mousedown]
  displayName: mousedown
  expansion: ".mousedown(${1:function() {\n\t${0:// Act on the event}\n\\}});"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.mouseenter]
  displayName: mouseenter
  expansion: ".mouseenter(${1:function() {\n\t${0:// Act on the event}\n\\}});"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.mouseleave]
  displayName: mouseleave
  expansion: ".mouseleave(${1:function() {\n\t${0:// Act on the event}\n\\}});"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.mousemove]
  displayName: mousemove
  expansion: ".mousemove(${1:function() {\n\t${0:// Act on the event}\n\\}});"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.mouseout]
  displayName: mouseout
  expansion: ".mouseout(${1:function() {\n\t${0:// Act on the event}\n\\}});"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.mouseover]
  displayName: mouseover
  expansion: ".mouseover(${1:function() {\n\t${0:// Act on the event}\n\\}});"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.mouseup]
  displayName: mouseup
  expansion: ".mouseup(${1:function() {\n\t${0:// Act on the event}\n\\}});"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.next]
  displayName: next
  expansion: .next(${1/(.+)/(?1:':)/}${1:selector}${1/(.+)/(?1:':)/})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.nextAll]
  displayName: nextAll
  expansion: .nextAll(${1/(.+)/(?1:':)/}${1:selector}${1/(.+)/(?1:':)/})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.nextUntil]
  displayName: nextUntil
  expansion: .nextUntil(${1/(.+)/(?1:':)/}${1:selector}${1/(.+)/(?1:':)/})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.not]
  displayName: not
  expansion: .not('${1:selector expression}')$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.offset]
  displayName: offset (function)
  expansion: ".offset(function(index, currentCoordinates) {\n  ${1:return ${2:someObject};}\n\
    })"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.offset]
  displayName: offset
  expansion: .offset(${1/(.+)/(?1:{:)/}${1:coordinates}${1/(.+)/(?1:}:)/})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.offsetParent]
  displayName: offsetParent
  expansion: .offsetParent()$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.one]
  displayName: one
  expansion: ".one('${1:event name}', function(${2:event}) {\n\t${0:// Act on the\
    \ event once}\n});"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.outerHeight]
  displayName: outerHeight
  expansion: .outerHeight()$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.outerWidth]
  displayName: outerWidth
  expansion: .outerWidth()$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.parent]
  displayName: parent
  expansion: .parent(${1/(.+)/(?1:':)/}${1:selector expression}${1/(.+)/(?1:':)/})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.parents]
  displayName: parents
  expansion: .parents(${1/(.+)/(?1:':)/}${1:selector expression}${1/(.+)/(?1:':)/})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.parentsUntil]
  displayName: parentsUntil
  expansion: .parentsUntil(${1/(.+)/(?1:':)/}${1:selector}${1/(.+)/(?1:':)/})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [plugin]
  displayName: plugin (animation)
  expansion: "jQuery.fn.${1:myeffect} = function(speed, easing, callback) {\n  return\
    \ this.animate({${2:param1}: ${3:'value'}}, speed, easing, callback);\n};"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [plugin]
  displayName: plugin (selector)
  expansion: "(function(\\$) {\n  \\$.extend(\\$.expr[':'], {\n    ${1:selectorName}:\
    \ function(element, index, matches, set) {\n      $0\n      return something;\n\
    \    }\n  });\n})(jQuery);\n"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [plugin]
  displayName: plugin (method)
  expansion: ";(function(\\$) {\n${2:// ${3:What does the $1 plugin do?}}\n\\$.fn.${1:pluginName}\
    \ = function(options) {\n  var opts = \\$.extend({}, \\$.fn.$1.defaults, options);\n\
    \n  return this.each(function() {\n    var \\$this = \\$(this);\n\n  ${5:  ${6://\
    \ Support for the Metadata Plugin.}\n    var o = \\$.meta ? \\$.extend({\\}, opts,\
    \ \\$this.data()) : opts;\n  }\n\n  });\n\n  // private function for debugging\n\
    \  function debug(\\$obj) {\n    if (window.console && window.console.log) {\n\
    \      window.console.log(\\$obj);\n    }\n  }\n};\n\n// default options\n\\$.fn.$1.defaults\
    \ = {\n  ${4:defaultOne:true,\n  defaultTwo:false,\n  defaultThree:'yay!'}\n};\n\
    \n})(jQuery);\n"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.prepend]
  displayName: prepend
  expansion: .prepend('${1:Some text <b>and bold!</b>}')$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.prependTo]
  displayName: prependTo
  expansion: .prependTo('${1:selector expression}')$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.prev]
  displayName: prev
  expansion: .prev(${1/(.+)/(?1:':)/}${1:selector expression}${1/(.+)/(?1:':)/})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.prevAll]
  displayName: prevAll
  expansion: .prevAll(${1/(.+)/(?1:':)/}${1:selector}${1/(.+)/(?1:':)/})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.prevUntil]
  displayName: prevUntil
  expansion: .prevUntil(${1/(.+)/(?1:':)/}${1:selector}${1/(.+)/(?1:':)/})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.remove]
  displayName: remove
  expansion: .remove()$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.removeAttr]
  displayName: removeAttr
  expansion: .removeAttr('${1:attribute name}')$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.removeClass]
  displayName: removeClass
  expansion: .removeClass('${1:class name}')$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.removeData]
  displayName: removeData
  expansion: .removeData('${1:data name}')$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.replaceAll]
  displayName: replaceAll
  expansion: .replaceAll('${1:data name}')$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [. replaceWith]
  displayName: replaceWith (function)
  expansion: ".replaceWith(function(index, currentContents) {\n  ${1:return ${2:something};}\n\
    })"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.replaceWith]
  displayName: replaceWith
  expansion: .replaceWith('${1:htmlString/DOMElement/jQueryObject}')$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.reset]
  displayName: reset
  expansion: ".reset(${1:function() {\n\t${0:// Act on the event}\n\\}});"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.resize]
  displayName: resize
  expansion: ".resize(${1:function() {\n\t${0:// Act on the event}\n\\}});"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.scroll]
  displayName: scroll
  expansion: ".scroll(${1:function() {\n\t${0:// Act on the event}\n\\}});"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.scrollLeft]
  displayName: scrollLeft
  expansion: .scrollLeft(${1:value})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.scrollTop]
  displayName: scrollTop
  expansion: .scrollTop(${1:value})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.select]
  displayName: select
  expansion: ".select(${1:function() {\n\t${0:// Act on the event}\n\\}});"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.serialize]
  displayName: serialize
  expansion: .serialize()$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.serializeArray]
  displayName: serializeArray
  expansion: .serializeArray()$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.show]
  displayName: show (with callback)
  expansion: ".show(${1/(^[0-9]+$)|.+/(?1::')/}${1:slow/400/fast}${1/(^[0-9]+$)|.+/(?1::')/},\
    \ function() {\n\t${0://Stuff to do *after* the animation takes place};\n});\n"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.show]
  displayName: show
  expansion: .show(${1/(^[0-9]+$)|.+/(?1::')/}${1:slow/400/fast}${1/(^[0-9]+$)|.+/(?1::')/})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.siblings]
  displayName: siblings
  expansion: .siblings(${1/(.+)/(?1:':)/}${1:selector expression}${1/(.+)/(?1:':)/})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.size]
  displayName: size
  expansion: .size()$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.slice]
  displayName: slice
  expansion: .slice(${1:start}${2/^([^,]|\d).*$|.+/(?1:, :)/}${2:end})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.slideDown]
  displayName: slideDown (with callback)
  expansion: ".slideDown(${1/(^[0-9]+$)|.+/(?1::')/}${1:slow/400/fast}${1/(^[0-9]+$)|.+/(?1::')/},\
    \ function() {\n\t${0://Stuff to do *after* the animation takes place};\n});\n"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.slideDown]
  displayName: slideDown
  expansion: .slideDown(${1/(^[0-9]+$)|.+/(?1::')/}${1:slow/400/fast}${1/(^[0-9]+$)|.+/(?1::')/})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.slideToggle]
  displayName: slideToggle
  expansion: .slideToggle(${1/(^[0-9]+$)|.+/(?1::')/}${1:slow/400/fast}${1/(^[0-9]+$)|.+/(?1::')/})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.slideUp]
  displayName: slideUp (with callback)
  expansion: ".slideUp(${1/(^[0-9]+$)|.+/(?1::')/}${1:slow/400/fast}${1/(^[0-9]+$)|.+/(?1::')/},\
    \ function() {\n\t${0://Stuff to do *after* the animation takes place};\n});\n"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.slideUp]
  displayName: slideUp
  expansion: .slideUp(${1/(^[0-9]+$)|.+/(?1::')/}${1:slow/400/fast}${1/(^[0-9]+$)|.+/(?1::')/})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.stop]
  displayName: stop
  expansion: .stop(${1:clearQueue}${2/^([^,]|\w).*$|.+/(?1:, :)/}${2:gotoEnd})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.submit]
  displayName: submit
  expansion: ".submit(${1:function() {\n\t${0:// Act on the event}\n\\}});"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.text]
  displayName: text
  expansion: .text(${1:'some text'})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.toArray]
  displayName: toArray
  expansion: .toArray()$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.toggle]
  displayName: toggle (event)
  expansion: ".toggle(function() {\n\t${1:// Stuff to do every *odd* time the element\
    \ is clicked;}\n}, function() {\n\t${2:// Stuff to do every *even* time the element\
    \ is clicked;}\n});\n$0"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.toggle]
  displayName: toggle (show/hide)
  expansion: .toggle(${1/(^[0-9]+$)|.+/(?1::')/}${1:slow/400/fast}${1/(^[0-9]+$)|.+/(?1::')/})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.toggleClass]
  displayName: toggleClass
  expansion: .toggleClass('${1:class name}')$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.trigger]
  displayName: trigger
  expansion: .trigger('${1:event name}')$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.trigger]
  displayName: triggerHandler
  expansion: .triggerHandler('${1:event name}')$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.unbind]
  displayName: unbind
  expansion: .unbind('${1:event name(s)}'${2/(^,).*|.+/(?1::, )/}${2/(^([0-9]+$|,.*))|.+/(?1::')/}${2:functionName}${2/(^([0-9]+$|,.*))|.+/(?1::')/})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.undelegate]
  displayName: undelegate
  expansion: .undelegate('${1:selector}', '${2:event type}', '${3:function}');
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.unwrap]
  displayName: unwrap
  expansion: .unwrap()$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.val]
  displayName: val
  expansion: .val(${1/(.+)/(?1:':)/}${1:text}${1/(.+)/(?1:':)/})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.width]
  displayName: width
  expansion: .width(${1:integer})$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.wrap]
  displayName: wrap
  expansion: .wrap('${1:<div class="extra-wrapper"></div>}')$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.wrap]
  displayName: wrapAll
  expansion: .wrapAll('${1:<div class="extra-wrapper"></div>}')$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [.wrap]
  displayName: wrapInner
  expansion: .wrapInner('${1:<div class="extra-wrapper"></div>}')$0
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [':']
  displayName: :button
  expansion: :button
  input: [none]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': ['M4+M3+:']
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js meta.selector.jquery
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [':']
  displayName: :checkbox
  expansion: :checkbox
  input: [none]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': ['M4+M3+:']
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js meta.selector.jquery
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [':']
  displayName: :checked
  expansion: :checked
  input: [none]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': ['M4+M3+:']
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js meta.selector.jquery
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [':']
  displayName: :contains('test')
  expansion: :contains('${1:test}')$0
  input: [none]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': ['M4+:']
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js meta.selector.jquery
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [':']
  displayName: :disabled
  expansion: :disabled
  input: [none]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': ['M4+M3+:']
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js meta.selector.jquery
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [':']
  displayName: :empty
  expansion: :empty
  input: [none]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': ['M4+:']
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js meta.selector.jquery
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [':']
  displayName: :enabled
  expansion: :enabled
  input: [none]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': ['M4+M3+:']
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js meta.selector.jquery
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [':']
  displayName: :eq(n)
  expansion: :eq(${1:n})$0
  input: [none]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': ['M4+:']
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js meta.selector.jquery
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [':']
  displayName: :even
  expansion: :even
  input: [none]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': ['M4+:']
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js meta.selector.jquery
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [':']
  displayName: :file
  expansion: :file
  input: [none]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': ['M4+M3+:']
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js meta.selector.jquery
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [':']
  displayName: :first-child
  expansion: :first-child
  input: [none]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': ['M4+:']
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js meta.selector.jquery
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [':']
  displayName: :first
  expansion: :first
  input: [none]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': ['M4+:']
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js meta.selector.jquery
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [':']
  displayName: :gt(n)
  expansion: :gt(${1:n})$0
  input: [none]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': ['M4+:']
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js meta.selector.jquery
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [':']
  displayName: :hidden
  expansion: ':hidden

    '
  input: [none]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': ['M4+:']
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js meta.selector.jquery
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [':']
  displayName: :image
  expansion: :image
  input: [none]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': ['M4+M3+:']
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js meta.selector.jquery
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [':']
  displayName: :input
  expansion: :input
  input: [none]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': ['M4+M3+:']
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js meta.selector.jquery
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [':']
  displayName: :last-child
  expansion: :last-child
  input: [none]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': ['M4+:']
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js meta.selector.jquery
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [':']
  displayName: :last
  expansion: :last
  input: [none]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': ['M4+:']
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js meta.selector.jquery
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [':']
  displayName: :lt(n)
  expansion: :lt(${1:n})$0
  input: [none]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': ['M4+:']
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js meta.selector.jquery
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [':']
  displayName: :not(s)
  expansion: :not(${1:s})$0
  input: [none]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': ['M4+:']
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js meta.selector.jquery
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [':']
  displayName: :nth-child(n)
  expansion: :nth-child(${1:n})$0
  input: [none]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': ['M4+:']
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js meta.selector.jquery
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [':']
  displayName: :odd
  expansion: :odd
  input: [none]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': ['M4+:']
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js meta.selector.jquery
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [':']
  displayName: :only-child
  expansion: :only-child
  input: [none]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': ['M4+:']
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js meta.selector.jquery
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [':']
  displayName: :parent
  expansion: ':parent

    '
  input: [none]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': ['M4+:']
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js meta.selector.jquery
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [':']
  displayName: :password
  expansion: :password
  input: [none]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': ['M4+M3+:']
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js meta.selector.jquery
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [':']
  displayName: :radio
  expansion: :radio
  input: [none]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': ['M4+M3+:']
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js meta.selector.jquery
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [':']
  displayName: :reset
  expansion: :reset
  input: [none]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': ['M4+M3+:']
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js meta.selector.jquery
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [':']
  displayName: :root
  expansion: :root
  input: [none]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': ['M4+:']
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js meta.selector.jquery
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [':']
  displayName: :selected
  expansion: :selected
  input: [none]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': ['M4+M3+:']
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js meta.selector.jquery
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [':']
  displayName: :submit
  expansion: :submit
  input: [none]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': ['M4+M3+:']
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js meta.selector.jquery
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [':']
  displayName: :text
  expansion: :text
  input: [none]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': ['M4+M3+:']
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js meta.selector.jquery
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [':']
  displayName: :visible
  expansion: ':visible

    '
  input: [none]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': ['M4+:']
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.js meta.selector.jquery
  workingDirectoryType: UNDEFINED
copyright: null
customProperties: {contact_email_rot_13: wpunssre@fgehpghervagrenpgvir.pbz}
decreaseIndentMarkers: {}
description: null
displayName: JavaScript jQuery
fileTypeRegistry: {}
fileTypes: []
foldingStartMarkers: {}
foldingStopMarkers: {}
increaseIndentMarkers: {}
license: null
licenseUrl: null
path: bundle.rb
repository: null
visible: true
